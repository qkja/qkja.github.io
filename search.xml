<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>序章</title>
      <link href="/2022/06/21/%E5%BA%8F%E7%AB%A0/"/>
      <url>/2022/06/21/%E5%BA%8F%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><blockquote><p>从今天开始，我要开启一个新的模块，C语言的基础知识我已经学的差不多了，但是还有一些边边角角的内容存在。这个模块主要以《C语言程序设计现代方法》(第二版)这本书为主要依据，用《高质量C&#x2F;C++编成》作为辅助。主要就是加大我对语言的理解和运用，扩展我的深度和广度。由于这几天还在学数据结构同时开了一个Java的基础模块，所以更新的速度有些慢。大概是两天一章。希望大家谅解。:dog: </p></blockquote><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><p><a href="https://blog.csdn.net/m0_61334618/article/details/123640297">第一章 C语言概述</a></p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《C语言程序设计现代方法》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一章 C语言概述</title>
      <link href="/2022/06/21/%E7%AC%AC%E4%B8%80%E7%AB%A0-C%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/"/>
      <url>/2022/06/21/%E7%AC%AC%E4%B8%80%E7%AB%A0-C%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>这章没有什么知识点，不过为了知识的完整性以及让我们认识C语言，还是把这章给加上吧。主要是提高大家的兴趣.这篇主要以趣味性为主.更加详细的内容还请我们阅读官方网站.</p><h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><h2 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h2><blockquote><p>大家好，我叫C语言，或许大家已经对我很熟悉了，不过我还是想要简绍一下我自己，这该死的表现欲。我是20世纪70年代诞生的，具体那一年我自己也不知道。我的前身是B语言，我的创造者也就是我的“父亲们”Ken Thompson、D.M.Ritchie觉得B语言这个号练废了，想要重新开一个号。就想开发一个<strong>NB语言</strong>（意为：“<strong>New B语言</strong>”），可惜我越长越歪，只能该名叫C语言了，我的成熟大概在1973年。现在已经49岁了，也就40来岁。</p></blockquote><h2 id="发展"><a href="#发展" class="headerlink" title="发展"></a>发展</h2><p>犹记得那时的我臃肿不堪，很多程序员都让我来替他们编写程序，可是他们的标准有各不相同，导致我带了一大堆重物，也出现一些问题。那时的我想要是有人可以帮我减轻一点负担就好了。1983年，我的愿望成真了。在美国国家标准协会（ASNI）推动下，美国开始指定标准。1990年国际标准化组织（ISO）通过了这项标准，人们给他们命名为C89或者是C90，由于标准的出现，我有可以十足的精力帮助人解决问题了。</p><h2 id="成熟"><a href="#成熟" class="headerlink" title="成熟"></a>成熟</h2><p>现在的我已经是一个大人了，已经帮助人们解决了很多问题。不过1999年又推出了一些标准，也叫做C99，我更加完善了，可惜C99的没有得到人们的认可，而且后面出现了很多语言,不过他们身上都有我的痕迹,在一些功能上,我远远不足他们,不过我是不会灰心的，会一直帮人们处理问题的.</p><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202206211411050.png" alt="image-20220321164011198"></p><h2 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h2><p>我知道我是一门底层语言,我提供了机器级的概念,这是其他语言千方百计想要避开的.我的包容性很强,这就意味着我出现错误的可能性会增大.</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>这里我不自己说,看看人类是怎么说的,嘿嘿🤭</p><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202206211411042.png" alt="image-20220321164640781"></p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><p>我并不完美,我是知道的,但是我也不会隐藏我的不足</p><ul><li>我更易隐藏错误</li><li>我可能难以理解</li><li>我可能难以修改</li></ul>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《C语言程序设计现代方法》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>详解MySQL中数据库的创建</title>
      <link href="/2022/06/21/02%20%E8%AF%A6%E8%A7%A3MySQL%E4%B8%AD%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%88%9B%E5%BB%BA/"/>
      <url>/2022/06/21/02%20%E8%AF%A6%E8%A7%A3MySQL%E4%B8%AD%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%88%9B%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><blockquote><p>这是我开始新学的模块，今天开始也算是见证自己的历程</p></blockquote><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><h2 id="什么是数据库"><a href="#什么是数据库" class="headerlink" title="什么是数据库"></a>什么是数据库</h2><blockquote><p>  数据库，又称为<strong>数据管理系统</strong>，简而言之可视为<strong>电子化的文件柜</strong>——存储电子文件的处所，用户可以对文件中的资料执行新增、截取、更新、删除等操作。 所谓“数据库”是以一定方式储存在一起、能予多个用户共享、具有尽可能小的冗余度、与应用程序彼此独立的数据集合。一个数据库由多个表空间构成。（来源：维基百科）</p></blockquote><p>说人话，数据库 就是一个存储物品的柜子，就像我们电脑的硬盘，只不过我们可以通过远程来操作里面的数据罢了，没什么可神秘的，那有人可能会疑惑，既然有文件里面可以存储数据了，我们为何还要使用数据库呢，实际上文件储存有一定的缺陷</p><ul><li>文件存储的安全性不够高</li><li>文件存储不利于管理和查询</li><li>文件不利于海量存储</li></ul><h2 id="数据库的分类"><a href="#数据库的分类" class="headerlink" title="数据库的分类"></a>数据库的分类</h2><blockquote><p>数据库有很多种类，有免费的，也有收费的，不过都大通小异，我们选择哪一个都可以，下面我就仔细说一下数据库的种类和历史</p></blockquote><p>数据库大致可以分为两大类，以后的工作中都有可能会用到</p><ol><li>关系型数据库</li><li>非关系型数据库</li></ol><h3 id="关系型数据库（SQL）"><a href="#关系型数据库（SQL）" class="headerlink" title="关系型数据库（SQL）"></a>关系型数据库（SQL）</h3><p>数据形式使用 <strong>表</strong> 作为结构，类似 excel，对于数据的约束比较强，所谓的<strong>约束</strong>就是对数据的合法性的校验，这种数据库适应于大部分场景</p><h4 id="关系型数据库的组成"><a href="#关系型数据库的组成" class="headerlink" title="关系型数据库的组成"></a>关系型数据库的组成</h4><p>这里我说的简单一点，我们都知道excel表格，数据库就是一个文件，而一个excel表文件中的一个个表单</p><p><img src="https://img-blog.csdnimg.cn/8759cf1f0e9746f4b5e598c6b2cd3176.png" alt="在这里插入图片描述"></p><h3 id="非关系型数据库（NoSQL）"><a href="#非关系型数据库（NoSQL）" class="headerlink" title="非关系型数据库（NoSQL）"></a>非关系型数据库（NoSQL）</h3><p>数据组织形式使用<strong>键值对</strong>作为结构，类似于Map，存储时都要指定key 和 value。对于数据的约束比较低。效率和水平拓展能力比较强，适合分布式系统</p><h3 id="数据库的代表"><a href="#数据库的代表" class="headerlink" title="数据库的代表"></a>数据库的代表</h3><ul><li>关系型  MySＱL 、Oracle 、SQL Serve 、SQLite</li><li>非关系  Redis、MongoDB、HBase</li></ul><h2 id="SQL语言"><a href="#SQL语言" class="headerlink" title="SQL语言"></a>SQL语言</h2><p>学习数据库，我们就必须对SQL语言有一定的了解，SQL是一门<strong>结构化</strong>的语言，实际就是一门编程语言，操作数据库主要就是使用这个语言，注意下面</p><ul><li>所有的关系型数据库都支持SQL语言，部分的语言细节可能有所差异，不过整体一样</li><li>非关系型数据库也支持，但不仅支持SQL，所以非关系型数据库也叫 <strong>NoSQL</strong></li></ul><h4 id="SQL的特点"><a href="#SQL的特点" class="headerlink" title="SQL的特点"></a>SQL的特点</h4><ol><li>SQL语言中存在特定的术语</li><li>SQL语言<strong>不会识别大小写</strong></li><li>一个SQL语言是以<strong>英文分号</strong>  <strong>‘ ；’</strong>结尾的，绝大部分的不见到分号绝对不会执行</li><li>SQL的注释  是  <strong>–</strong></li></ol><p><img src="https://img-blog.csdnimg.cn/77939e45b1924b1aa214274af79a32c3.png" alt="在这里插入图片描述"></p><h2 id="为何选择-MySQL数据库"><a href="#为何选择-MySQL数据库" class="headerlink" title="为何选择 MySQL数据库"></a>为何选择 MySQL数据库</h2><p>我们可能会感到疑惑，这么多数据库,我们为何选择MySQL,我们使用一个工具,那么肯定是这个工具好用,MySQL也是如此,就像Java和C++一样</p><h3 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h3><ul><li>开源,也就意味着免费</li><li>原理和其他数据库差不多</li></ul><h3 id="最好的数据库-Oracle"><a href="#最好的数据库-Oracle" class="headerlink" title="最好的数据库 Oracle"></a>最好的数据库 Oracle</h3><p>毫无争议,最好的数据库就是Oracle,但是最好就意味着他很贵,普通的学生使用不起的,甚至一些中小型公司也用不起,能够用的起的不多,当然银行用的起,他不差钱,而且数据很宝贵</p><h4 id="Oracle贵的理由"><a href="#Oracle贵的理由" class="headerlink" title="Oracle贵的理由"></a>Oracle贵的理由</h4><ul><li>贵在服务上</li><li>贵在安全性</li><li>贵在放心</li><li>Oracle不是拿来就可以用,需要搭配小型机才可以发挥 十成 效果</li></ul><h1 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h1><p>查看数据的的语言很简单,只需要一个语句就可以</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">show</span> <span class="token keyword">databases</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">-- 注意 databases 是负数形式</span></code></pre><p><img src="https://img-blog.csdnimg.cn/3972527a783f4893991d6a01e0075c6b.png" alt="在这里插入图片描述"></p><p>你可能会发现我们查看的数据库不太一样,这是因为我之前创建过其他的数据库</p><h1 id="创建一个数据库"><a href="#创建一个数据库" class="headerlink" title="创建一个数据库"></a>创建一个数据库</h1><p><strong>MySQL是一个软件</strong>,它可以去维护很多逻辑上的数据库,也就是说我们可以创建多个数据库,所谓的数据库就是若干张表的集合,我们开始创建一个数据库,使用SQL语言</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">database</span> db_test<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">-- db_test 数据库名  </span></code></pre><p><img src="https://img-blog.csdnimg.cn/a580e9047889457f9d241359f7e6f738.png" alt="在这里插入图片描述"></p><blockquote><p>我们再创建数据库的时候可能会出现一些问题</p></blockquote><h3 id="数据库名字错误"><a href="#数据库名字错误" class="headerlink" title="数据库名字错误"></a>数据库名字错误</h3><blockquote><p>名字要求  数字字母下划线 , 数字不开头,中间不能带空格</p></blockquote><h3 id="数据库创建时数据库已存在"><a href="#数据库创建时数据库已存在" class="headerlink" title="数据库创建时数据库已存在"></a>数据库创建时数据库已存在</h3><p><img src="https://img-blog.csdnimg.cn/205c3ac0adf347128f7fcc5f4c750696.png" alt="在这里插入图片描述"></p><blockquote><p>当你不知道你要创建的数据库是否已经存在时，你可以使用下面的语句</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> db_test<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">-- 如果db_test数据库不存在，就创建它</span></code></pre><p><img src="https://img-blog.csdnimg.cn/a27ecaa61cf74de7aaed99fefd2eac19.png" alt="在这里插入图片描述"></p><h1 id="创建数据库时指定编码集"><a href="#创建数据库时指定编码集" class="headerlink" title="创建数据库时指定编码集"></a>创建数据库时指定编码集</h1><blockquote><p>对于编码集这个名词，我也不是太明白，不过我们要明白，当创建数据库时，有时候可能不支持中文，这时候就需要我们来指定编码集了<br>当我们不指定编码集的时候，它采用默认的</p></blockquote><h2 id="查看数据库编码集"><a href="#查看数据库编码集" class="headerlink" title="查看数据库编码集"></a>查看数据库编码集</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">database</span> db_test<span class="token punctuation">;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/2ca48eab4f394f2c894aaf2bf02df15a.png" alt="在这里插入图片描述"></p><h2 id="指定编码集"><a href="#指定编码集" class="headerlink" title="指定编码集"></a>指定编码集</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">database</span> db_fmsc <span class="token keyword">character set</span> utf8<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">-- 指定以utf8编码集进行创建</span></code></pre><p><img src="https://img-blog.csdnimg.cn/76aa18acb45c451ea454f34ede825354.png" alt="在这里插入图片描述"></p><h2 id="修改编码集"><a href="#修改编码集" class="headerlink" title="修改编码集"></a>修改编码集</h2><blockquote><p>我们创建的数据的编码集也是可以修改的，</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">database</span> db_fmsc2<span class="token punctuation">;</span><span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">database</span> db_fmsc2<span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">database</span> db_fmsc2 <span class="token keyword">character set</span> utf8<span class="token punctuation">;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/b01e72386d5e411eaa83a157ae818304.png" alt="在这里插入图片描述"></p><h1 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h1><blockquote><p>我们将不要数据库进行删除</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">drop</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> db_fmsc<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">-- if exists 也可以没有，不过要保证数据库 db_fmsc 存在</span></code></pre><p><img src="https://img-blog.csdnimg.cn/e35addb4dc3d4c9096d9823d90f3e077.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>详解MySQL下表的创建于销毁</title>
      <link href="/2022/06/21/03%20%E8%AF%A6%E8%A7%A3MySQL%E4%B8%8B%E8%A1%A8%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E9%94%80%E6%AF%81/"/>
      <url>/2022/06/21/03%20%E8%AF%A6%E8%A7%A3MySQL%E4%B8%8B%E8%A1%A8%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E9%94%80%E6%AF%81/</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><blockquote><p>我在上一篇博客写了如何创建一个数据库,今天我们就来看看数据库是如何使用的:tomato:</p></blockquote><h1 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h1><p>我们刚开始进入数据库是在主页面中,我们需要进入到某一个数据库</p><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203061629733.png" alt="image-20220306162913603"></p><p>我们使用下面语句</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">use</span> <span class="token operator">&lt;</span>数据库名<span class="token operator">></span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203061630228.png" alt="image-20220306163058142"></p><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><p>我们要使用数据库,还要创建数据表,而创建数据表就需要学习SQL语言的中的数据类型</p><blockquote><p>我们学过很多语言，里面都有关数据类型的分类，SQL语言自然也是有的，它分为三大类。</p></blockquote><ul><li>数值类型</li><li>字符串类型</li><li>日期类型</li></ul><h2 id="为何要有数据类型"><a href="#为何要有数据类型" class="headerlink" title="为何要有数据类型"></a>为何要有数据类型</h2><blockquote><p>这是一个很好很基本的问题 ，它放映了存在的原因，想一想当我们在表格中会输入什么</p></blockquote><p><img src="https://img-blog.csdnimg.cn/8df344374a3e4cffb60bafd3a5a585b0.png" alt="在这里插入图片描述"></p><h2 id="数据类型怎么用"><a href="#数据类型怎么用" class="headerlink" title="数据类型怎么用"></a>数据类型怎么用</h2><blockquote><p>我们都知道每一中数据类型都有它的范围，这个范围指的是表格中数据的大小，那我们应该怎么使用，这个可能和我们之前的理解不太一样,下面我们一一来说</p></blockquote><h2 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h2><blockquote><p>这个简单，我们知道int 、float、 double在这里都有，不过它也添加了许多其他的，下面我就一一给出，由于它是规定的，我们也没有太多话可以说</p></blockquote><blockquote><p>我们给出数值类型是为了可以进行<strong>算数运算</strong>(，比如说年龄 ，我们是可以将它定义为字符类型的，但是我们知道每过人一个生日，我们的年龄 + 1，可以看出数据类型比较好处理</p></blockquote><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>这些种类的名字很奇怪，原因是因为SQL语言很久之前就出现了，后面的名字就没有修改</p><table><thead><tr><th align="center">类型</th><th align="center">大小</th><th align="center">说明</th><th align="center">对应Java类型</th></tr></thead><tbody><tr><td align="center">tinyint</td><td align="center">1字节</td><td align="center"></td><td align="center">Byte</td></tr><tr><td align="center">smallint</td><td align="center">2字节</td><td align="center"></td><td align="center">Short</td></tr><tr><td align="center">int</td><td align="center">4字节</td><td align="center"></td><td align="center">Integer</td></tr><tr><td align="center">bigint</td><td align="center">8字节</td><td align="center"></td><td align="center">Long</td></tr><tr><td align="center">float(M,D)</td><td align="center">4字节</td><td align="center">单精度,M指定长度,D指定小数点后几位，会有精度损失</td><td align="center">Float</td></tr><tr><td align="center">double(M,D)</td><td align="center">8字节</td><td align="center"></td><td align="center">Double</td></tr><tr><td align="center">decimal(M,D)</td><td align="center">M&#x2F;D最大 值+2</td><td align="center">双精度，M指定长度,D指定小数点后几位，精确值</td><td align="center">BigDecimal</td></tr></tbody></table><p>注意也可以加上 unsigned 变成无符号的，不过不推荐</p><blockquote><p>常用的数值类型</p></blockquote><ul><li>整型 int</li><li>浮点型 double(M,D) 和 decimal(M,D)</li></ul><h3 id="说一下decimal"><a href="#说一下decimal" class="headerlink" title="说一下decimal"></a>说一下decimal</h3><blockquote><p>我们知道，当我们使用double型时，有时候会带有很多位小数，比如说3.900000，很不舒服，所以就出现了decimal，它只会有2位小数，decimal的精度很高，我们用于更正确的计算</p></blockquote><blockquote><p>decimal（10，2）表示 数值位 有10位，小数位有2位</p></blockquote><h2 id="字符类型"><a href="#字符类型" class="headerlink" title="字符类型"></a>字符类型</h2><blockquote><p>这里的字符类型有些多，我们只需记住几个常用的就行，后面遇到可以查表</p></blockquote><h3 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h3><table><thead><tr><th>类型</th><th>大小</th><th>说明</th><th>对应Java类型</th></tr></thead><tbody><tr><td>char</td><td>0 ~ 255字节</td><td>定长字符串，char（n）n&lt;&#x3D;255</td><td>String</td></tr><tr><td>varchar(SIZE)</td><td>0 ~ 65536字节</td><td>变长字符串</td><td>String</td></tr><tr><td>blob</td><td>0 ~65536字节</td><td>存储二进制字符串</td><td>byte[]</td></tr><tr><td>mediumblob</td><td>0 ~16777215字节</td><td>存储二进制字符串</td><td>String</td></tr><tr><td>text</td><td>0 ~65536字节</td><td>长文本数据</td><td>String</td></tr></tbody></table><h3 id="char-10-和varchar-10-的区别"><a href="#char-10-和varchar-10-的区别" class="headerlink" title="char(10)和varchar(10)的区别"></a>char(10)和varchar(10)的区别</h3><ul><li>char(10)表示我们只能输入10个字符，如果输入小于10，则自动补充’\u0000’至10个字符</li><li>varchar(10)表示我们可以输入&lt;&#x3D;10的字符，不够的空格自动补齐</li></ul><h2 id="日期类型"><a href="#日期类型" class="headerlink" title="日期类型"></a>日期类型</h2><blockquote><p>我们要说一下，日期类型不是也可以用字符串来表示吗？实际上可以的，不过存在一个问题，在数据库中，我们有时候要求基于时间字段进行查询，这就不太好了，所以特地出现了日期类型</p></blockquote><h3 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h3><table><thead><tr><th>类型</th><th>说明</th><th>格式</th></tr></thead><tbody><tr><td>date</td><td>只能存储年月日</td><td>2021-01-23</td></tr><tr><td>time</td><td>只能存储时分秒</td><td>11：23：56</td></tr><tr><td>year</td><td>只能存储年份</td><td>2021</td></tr><tr><td>datetime</td><td>能存储年月日，也可以存储时分秒，空格隔开</td><td>2021-01-23 11：23：56</td></tr><tr><td>timestamp</td><td>能存储年月日，也可以存储时分秒  时间戳</td><td>20210123 112356</td></tr></tbody></table><h1 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h1><blockquote><p>我们正式开始如何创建一个表格</p></blockquote><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><blockquote><p>下面我写一行伪代码，解释一下没有出现过的名词</p></blockquote><p>注意我们创建数据表时，字段名在前，类型在后, 要是我们的表名于SQL语句冲突，我们使用 反引号 将其括起来，就可以了</p><p>反引号 位于tab健上面，Esc健下面 1的左面</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> students<span class="token punctuation">(</span> stu_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> stu_sex char<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> stu_age <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> stu_tele char<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">unique</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/3279f6b4fc2b4af7a20944439507315c.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/402b64f5b0be412fbdc48796d8382fae.png" alt="在这里插入图片描述"></p><blockquote><p>下面我要解释一下我们的名词，他们都是约束条件，这两个约束我们也可以不写，就是没有了我们想要的限制，这只是其中的两个约束，后面还有其他的的约束</p></blockquote><h3 id="非空约束-not-null"><a href="#非空约束-not-null" class="headerlink" title="非空约束 not null"></a>非空约束 not null</h3><blockquote><p>not null意味着这列是必填项，不能为空</p></blockquote><h3 id="唯一约束-unique"><a href="#唯一约束-unique" class="headerlink" title="唯一约束 unique"></a>唯一约束 unique</h3><blockquote><p>unique表示这一列的数据两两不同</p></blockquote><h2 id="查询数据表"><a href="#查询数据表" class="headerlink" title="查询数据表"></a>查询数据表</h2><p>我们可以使用下面的语句查询一个数据库下所有的表</p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/91a12c71462241f69ab693eba966f0de.png" alt="在这里插入图片描述"></p><h2 id="查询表结构"><a href="#查询表结构" class="headerlink" title="查询表结构"></a>查询表结构</h2><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">desc</span> <span class="token operator">&lt;</span>表名<span class="token operator">></span><span class="token punctuation">;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/725f40523fd0497a8f9550ca8da43acb.png" alt="在这里插入图片描述"></p><h1 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h1><p>当我们突然意识到我们的一张表创建有一些问题时，除了删除外，我们也可以在原来的基础上进行修改</p><h2 id="修改表名"><a href="#修改表名" class="headerlink" title="修改表名"></a>修改表名</h2><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">table</span> students <span class="token keyword">rename</span> <span class="token keyword">to</span> stu_test<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">-- to 也可以省略</span></code></pre><p><img src="https://img-blog.csdnimg.cn/f4b5e240c0f1416a8f34d791f8fbfb97.png" alt="在这里插入图片描述"></p><h2 id="修改表的字符集"><a href="#修改表的字符集" class="headerlink" title="修改表的字符集"></a>修改表的字符集</h2><blockquote><p>数据表也是有字符集的，默认和数据库一置</p></blockquote><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">table</span> stu_test <span class="token keyword">character set</span> utf8<span class="token punctuation">;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/0d977ff04c8d4e458d3ed5ea849fdc33.png" alt="在这里插入图片描述"></p><h2 id="增加一个字段"><a href="#增加一个字段" class="headerlink" title="增加一个字段"></a>增加一个字段</h2><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">table</span> stu_test <span class="token keyword">add</span> stu_qq char<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">unique</span><span class="token punctuation">;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/e702f2c68bab41cab3f2fbde1a7933a0.png" alt="在这里插入图片描述"></p><h2 id="删除一个字段"><a href="#删除一个字段" class="headerlink" title="删除一个字段"></a>删除一个字段</h2><blockquote><p>alter table 数据表名 drop 字段名</p></blockquote><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">table</span> students <span class="token keyword">drop</span> stu_num<span class="token punctuation">;</span></code></pre><blockquote><p>删除前</p></blockquote><p><img src="https://img-blog.csdnimg.cn/b181a37008f940a69345740d7e8595c8.png" alt="在这里插入图片描述">删除</p><blockquote><p>删除后</p></blockquote><p><img src="https://img-blog.csdnimg.cn/c0d99ffe88eb4cceac78e6cc93c9b713.png" alt="在这里插入图片描述"></p><h1 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h1><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> stu_test<span class="token punctuation">;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/6b888f536ddf47e0b4aa4e445662baa4.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>详解MySQL中数据库数据的插入与删除</title>
      <link href="/2022/06/21/04%20%E8%AF%A6%E8%A7%A3MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E6%95%B0%E6%8D%AE%E7%9A%84%E6%8F%92%E5%85%A5%E4%B8%8E%E5%88%A0%E9%99%A4/"/>
      <url>/2022/06/21/04%20%E8%AF%A6%E8%A7%A3MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E6%95%B0%E6%8D%AE%E7%9A%84%E6%8F%92%E5%85%A5%E4%B8%8E%E5%88%A0%E9%99%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><blockquote><p>很久没有更新了，新年第一篇文章，写的要是有什么疏漏的的地方，可以在下面留言，我会及时修改，今天我们看看如何进行对表增加和删除数据</p></blockquote><p> 我先创建一个数据表</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> exam_result<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>chinese <span class="token keyword">decimal</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>math <span class="token keyword">decimal</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>english <span class="token keyword">decimal</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/02b48071cd404d8bbe1f6ebdf4fa6b79.png" alt="在这里插入图片描述"></p><p>查看一下表结构 </p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">desc</span> exam_result<span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203061859569.png" alt="image-20220306185947533"></p><h1 id="增加数据"><a href="#增加数据" class="headerlink" title="增加数据"></a>增加数据</h1><p>增加数据是后面几个操作的基础，我们一定要学好这个部分</p><h2 id="全部列插入"><a href="#全部列插入" class="headerlink" title="全部列插入"></a>全部列插入</h2><p>我们往表里面插入数据的的话，需要依托下面几行代码</p><h3 id="单行插入"><a href="#单行插入" class="headerlink" title="单行插入"></a>单行插入</h3><blockquote><p>要是我们每一个列都要有数据，可以这么做，这里我们先提一下在sql语言中，字符串用单引号来标识</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token punctuation">[</span>表名<span class="token punctuation">]</span> <span class="token keyword">values</span> <span class="token punctuation">(</span>插入的数据<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">-- 全部插入  其中into可以省略</span></code></pre><blockquote><p>往表里面插入一个数据  —   0,’孙仲谋’,89.0,34,32</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> exam_result <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">'孙仲谋'</span><span class="token punctuation">,</span><span class="token number">89.0</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/6427e7c615584e85be6bd4a8f33cb4a2.png" alt="在这里插入图片描述"></p><h4 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h4><blockquote><p>这个先在这里说一下，我们后面仔细地谈一谈，放在这主要是为了看一看我们插入的结果</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span><span class="token operator">*</span> <span class="token keyword">from</span>  exam_result<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">-- 查看所有数据</span></code></pre><p><img src="https://img-blog.csdnimg.cn/17287996fa774f35b607d323686dabc7.png" alt="在这里插入图片描述"></p><h3 id="多行插入"><a href="#多行插入" class="headerlink" title="多行插入"></a>多行插入</h3><blockquote><p>要是我们嫌一行一行插入太麻烦的话，我们可以一次性插入多个数据，</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token punctuation">[</span>表名<span class="token punctuation">]</span> <span class="token keyword">values</span> <span class="token punctuation">(</span>数据<span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>数据<span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>数据<span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token comment" spellcheck="true">--  多行插入 数据与数据之间有 逗号 隔开</span></code></pre><blockquote><p>看一下例子</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> exam_result <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'唐三藏'</span><span class="token punctuation">,</span><span class="token number">67.8</span><span class="token punctuation">,</span><span class="token number">78.9</span><span class="token punctuation">,</span><span class="token number">89.1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'孙悟空'</span><span class="token punctuation">,</span><span class="token number">50.5</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">99.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'猪八戒'</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">60.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'沙和尚'</span><span class="token punctuation">,</span><span class="token number">69.0</span><span class="token punctuation">,</span><span class="token number">77.2</span><span class="token punctuation">,</span><span class="token number">88.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">'曹孟德'</span><span class="token punctuation">,</span><span class="token number">65.2</span><span class="token punctuation">,</span><span class="token number">85.0</span><span class="token punctuation">,</span><span class="token number">99.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">'关云长'</span><span class="token punctuation">,</span><span class="token number">66.0</span><span class="token punctuation">,</span><span class="token number">10.0</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">'李七夜'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">79.0</span><span class="token punctuation">,</span><span class="token number">78.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/1a77b2ee8393438898eade88de8a080f.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/f23c16ebf1c94690b53b877f2374a7e6.png" alt="在这里插入图片描述"></p><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>我们会发现null这个字样，这代表这这个数据为空</li><li>各个数据之间用英文的逗号隔开</li></ul><h2 id="部分列插入"><a href="#部分列插入" class="headerlink" title="部分列插入"></a>部分列插入</h2><blockquote><p>和全部的插入差不太多，我们只需要在values前面加上我们要插入的列名就可以了，后面的数据匹配上就行</p></blockquote><h3 id="单行插入-1"><a href="#单行插入-1" class="headerlink" title="单行插入"></a>单行插入</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token punctuation">[</span>表名<span class="token punctuation">]</span> <span class="token punctuation">(</span>插入的列名<span class="token number">1</span><span class="token punctuation">,</span>插入的列名<span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">-- 部分插入</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> exam_result <span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>math<span class="token punctuation">,</span>english<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">'帝尊'</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/ebd9a417d87c45ee81e307f2d0e4ab33.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/b0a9b781b430446994d922e7e09a1849.png" alt="在这里插入图片描述"></p><blockquote><p>注意我们没有进行插入的列是自动置为null的</p></blockquote><h3 id="多行插入-1"><a href="#多行插入-1" class="headerlink" title="多行插入"></a>多行插入</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token punctuation">[</span>表名<span class="token punctuation">]</span> <span class="token punctuation">(</span>插入的列名<span class="token punctuation">)</span><span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>   <span class="token comment" spellcheck="true">-- 部分插入</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> exam_result <span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>math<span class="token punctuation">,</span>english<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token string">'赵云'</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">'张飞'</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/4196f04a2f2a4f94a23f02c894f13f4a.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/435995df68c843189b6977386fb9d8fa.png" alt="在这里插入图片描述"></p><h1 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h1><p>我和大家说一下我们<strong>除非是非常有必要，否则一定不要删除数据</strong>，因为我们使用常规的的手段很难将其再恢复出来，我们需要查看bin文件下查看自己之前所有的SQL命令，实际上数据库的内容并不是我们现在学的那么简单，它需要专门的人进行维护，而且要求知识水平很高，不是一般的程序员就可以当任的。</p><blockquote><p>我们使用的是delete语句,这里的where语句大家可以认为是一种判断条件</p></blockquote><h2 id="删除一行"><a href="#删除一行" class="headerlink" title="删除一行"></a>删除一行</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">delete</span> <span class="token keyword">from</span> <span class="token punctuation">[</span>表名<span class="token punctuation">]</span> <span class="token keyword">where</span> <span class="token punctuation">[</span>条件<span class="token punctuation">]</span></code></pre><blockquote><p>看一看例子</p></blockquote><p><img src="https://img-blog.csdnimg.cn/cdec26d6d61b4e3fa1f673b86d578669.png" alt="在这里插入图片描述"></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">delete</span> <span class="token keyword">from</span> exam_result <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">-- 删除 id = 0 的这一行</span></code></pre><p><img src="https://img-blog.csdnimg.cn/c0d073ab0a2c486fa0a691edc847ae94.png" alt="在这里插入图片描述"></p><h2 id="删除全部"><a href="#删除全部" class="headerlink" title="删除全部"></a>删除全部</h2><blockquote><p>要是我们后面不带有where判断语句，我们删除的是整个表的内容</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">delete</span> <span class="token keyword">from</span> <span class="token punctuation">[</span>表名<span class="token punctuation">]</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token keyword">delete</span> <span class="token keyword">from</span> exam_result<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">-- 删除表里的所有内容</span></code></pre><p><img src="https://img-blog.csdnimg.cn/f3a71f1a2d9b48a29466143ed8cf4f60.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>详解MySQL字段约束</title>
      <link href="/2022/06/21/06%20%E8%AF%A6%E8%A7%A3MySQL%E5%AD%97%E6%AE%B5%E7%BA%A6%E6%9D%9F/"/>
      <url>/2022/06/21/06%20%E8%AF%A6%E8%A7%A3MySQL%E5%AD%97%E6%AE%B5%E7%BA%A6%E6%9D%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><blockquote><p>我们已经会创建数据表了，不过有时候会看到not null等字样，这些便是字段约束的内容，我们好好看一看什么是约束，又有哪些约束，这份博客时纯理论的，我们自己要理解这里面的内容</p></blockquote><h1 id="什么是字段约束"><a href="#什么是字段约束" class="headerlink" title="什么是字段约束"></a>什么是字段约束</h1><blockquote><p>简而言之，字段约束就是将字段的内容定一个规则，我们要按照规则办事，常见的字段约束有下面几个</p></blockquote><h2 id="约束的分类"><a href="#约束的分类" class="headerlink" title="约束的分类"></a>约束的分类</h2><ul><li><strong>not nul</strong>l  –  指示某列不能存储 NULL 值  </li><li><strong>unique</strong>   –  保证某列的每行必须有唯一的值  </li><li><strong>default</strong>   –  规定没有给列赋值时的默认值  </li><li>**primary key **            –  not null 和 unique 的结合。确保某列（或两个列多个列的结合）有唯一标<br>  识，有助于更容易更快速地找到表中的一个特定的记录  </li><li><strong>foreign key</strong>  – 保证一个表中的数据匹配另一个表中的值的参照完整性  </li><li><strong>check</strong>  – 保证列中的值符合指定的条件。对于MySQL数据库，对check子句进行分析，但是忽略<br>  check子句  ,我们不太常用，就不说了</li></ul><h1 id="为何要有字段约束"><a href="#为何要有字段约束" class="headerlink" title="为何要有字段约束"></a>为何要有字段约束</h1><ul><li>保证数据的完整性</li><li>保证数据的有效性</li></ul><h2 id="完整性"><a href="#完整性" class="headerlink" title="完整性"></a>完整性</h2><blockquote><p>我们有时候填表会发现有些是必填项，这里就是not null的作用，他要求这个表格不能为空，获取我们完整的信息</p></blockquote><h2 id="有效性"><a href="#有效性" class="headerlink" title="有效性"></a>有效性</h2><blockquote><p>在这里我们假设一个个场景，要是张三的电话号码是123×××××××45，那么李四的电话号码绝对不会和张三一摸一样，这里就体现出unique的作用了</p></blockquote><blockquote><p>我们先创建一个表格，来仔细看看</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> books<span class="token punctuation">(</span>    book_id char<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    book_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">unique</span><span class="token punctuation">,</span>    book_price <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/7f56b48e45464c6b8ee6199a1d697113.png" alt="在这里插入图片描述"></p><h1 id="非空约束-not-null"><a href="#非空约束-not-null" class="headerlink" title="非空约束  not null"></a>非空约束  <strong>not nul</strong>l</h1><blockquote><p><strong>非空约束</strong>比较简单，就是要求我们不能为空，命令为 <strong>not null</strong></p></blockquote><blockquote><p>在上面我们就看到了这行代码  <strong>book_id char(10) not null,</strong> 这就是说book_id不可以为空</p></blockquote><p><img src="https://img-blog.csdnimg.cn/c51820b9a66a431fbda227e0bdb7a2f7.png" alt="在这里插入图片描述"></p><h1 id="唯一约束-unique"><a href="#唯一约束-unique" class="headerlink" title="唯一约束   unique"></a>唯一约束   unique</h1><blockquote><p>这里也很简单，<strong>唯一</strong> 的意思就是各不相同，代码是<strong>book_name varchar(20) unique,</strong></p></blockquote><p><img src="https://img-blog.csdnimg.cn/c4ec11377d864385aea566a045331cf9.png" alt="在这里插入图片描述"></p><h1 id="默认值约束-default"><a href="#默认值约束-default" class="headerlink" title="默认值约束  default"></a>默认值约束  default</h1><p>这个时定义默认值的，要是我们不定义，它是NULL</p><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203111936760.png" alt="image-20220311193658720"></p><p>我们先测试一下</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token keyword">types</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">'测试'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203111949895.png" alt="image-20220311194916856"></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token keyword">types</span> <span class="token punctuation">(</span>type_id<span class="token punctuation">,</span>type_remark<span class="token punctuation">)</span><span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'测试'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">--  部分列插入</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203111950432.png" alt="image-20220311195017392"></p><p>从这里我们可以看出当我们不进行插入值时，列就会是默认值</p><h1 id="主键约束-primary-key"><a href="#主键约束-primary-key" class="headerlink" title="主键约束   primary key"></a>主键约束   primary key</h1><blockquote><p>这里的主键约束相当于唯一约束和非空约束的集合，不过也会有一些另外的不同</p></blockquote><ol><li>主键约束 &#x3D; 非空约束 + 唯一约束</li><li>主键约束也是一个标识</li><li>一个表只能有一个主键，一个主键可以包含一个或多个列</li></ol><h2 id="创建主键"><a href="#创建主键" class="headerlink" title="创建主键"></a>创建主键</h2><p>我们最好每一张数据表都创建一个主键，后面我们用到<strong>索引</strong>的时候会说一下原因</p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> Persons<span class="token punctuation">(</span>per_id char<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>per_name char<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>per_age <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>per_tele char<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">primary</span> <span class="token keyword">key</span>  <span class="token comment" spellcheck="true">--  创建字段时指定</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> Persons<span class="token punctuation">(</span>per_id char<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>per_name char<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>per_age <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>per_tele char<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">(</span>per_tele char<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">--   最后指定</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><p>看一看结果</p></blockquote><p><img src="https://img-blog.csdnimg.cn/1093001864f1458bb99798704633ae5a.png" alt="在这里插入图片描述"></p><h2 id="删除主键"><a href="#删除主键" class="headerlink" title="删除主键"></a>删除主键</h2><blockquote><p>这里就体现出主键约束和其他的一些不同，我们删除时就不需要看具体的字段</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> Persons <span class="token keyword">drop</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">;</span>      </code></pre><p><img src="https://img-blog.csdnimg.cn/312d74ac715a4e64b08ba493e2c10804.png" alt="在这里插入图片描述"></p><h2 id="添加主键"><a href="#添加主键" class="headerlink" title="添加主键"></a>添加主键</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> Persons <span class="token keyword">modify</span> per_tele char<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/4eef23deb4eb4554803ec1637724e6c4.png" alt="在这里插入图片描述"></p><h3 id="不能为空"><a href="#不能为空" class="headerlink" title="不能为空"></a>不能为空</h3><p><img src="https://img-blog.csdnimg.cn/134ef20c350d4b1fbc8864f5603b3cde.png" alt="在这里插入图片描述"></p><h3 id="不能相同"><a href="#不能相同" class="headerlink" title="不能相同"></a>不能相同</h3><p><img src="https://img-blog.csdnimg.cn/3dfeec37b9df4eb9a036062d34cb0a9b.png" alt="在这里插入图片描述"></p><h2 id="主键的自动增长"><a href="#主键的自动增长" class="headerlink" title="主键的自动增长"></a>主键的自动增长</h2><blockquote><p>在实际生活中，我们可能会遇到这么一个问题，很多字段我们不能保证他们不为空或者是两两不同的，我们可以创建出一个额外的字段让他们好寻找，自然而然的就会以1、2、3、…….来标识，不过这也太麻烦了，我们出现了自动增长的形式</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">types</span><span class="token punctuation">(</span>type_id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>type_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>type_remark char<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203111927005.png" alt="image-20220311192655896"></p><blockquote><p>这个代码将type_id设置为自动增长主键</p></blockquote><p><img src="https://img-blog.csdnimg.cn/6dd5de7dff2c41baaef4646f9093b27c.png" alt="在这里插入图片描述"></p><blockquote><p>不过自动增长也有一些缺陷，要是我们删除一行，其他的type_id的值是不变的</p></blockquote><p><img src="https://img-blog.csdnimg.cn/b3b5de43e8674d0baeab5c0a29eb3cd1.png" alt="在这里插入图片描述"></p><blockquote><p>这里我好好解释一下，只要我们添加了一行数据，他就会+1，即使我们后来删除了，它也不会    -1，是一直加的</p></blockquote><p><img src="https://img-blog.csdnimg.cn/9bd3c8858ec347e6807e5f03bb841415.png" alt="在这里插入图片描述"></p><h2 id="联合主键"><a href="#联合主键" class="headerlink" title="联合主键"></a>联合主键</h2><p>这里我先建一个数据表格，这张表中我们会发现，我们学生和课程只有在一起我们才能得到真实的成绩。所以这就出现了联合主键，联合主键，顾名思义就是多个主键联合形成一个主键组合，体现在联合。</p><p><img src="https://img-blog.csdnimg.cn/9c576431afc044278134ff97ddd07824.png" alt="在这里插入图片描述"></p><p>我发现这里的字段都不能作为主键，但是<strong>学生</strong>和<strong>课程</strong>连在一起却可以，这就是<strong>联合主键</strong></p><h3 id="如何定义联合主键"><a href="#如何定义联合主键" class="headerlink" title="如何定义联合主键"></a>如何定义联合主键</h3><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">create</span> <span class="token keyword">table</span> grades<span class="token punctuation">(</span>    <span class="token operator">-</span><span class="token operator">></span> stu_name char<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token operator">-</span><span class="token operator">></span> stu_class char<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token operator">-</span><span class="token operator">></span> stu_grade <span class="token keyword">int</span><span class="token punctuation">,</span>    <span class="token operator">-</span><span class="token operator">></span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">(</span>stu_name<span class="token punctuation">,</span>stu_class<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">--  stu_name 和 stu_class 一起 定义主键</span>    <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/40f2ed23d7644a35892c1696d62d257f.png" alt="在这里插入图片描述"></p><blockquote><p>这里面提示一下我们很少使用联合主键，我们可以额外提供一个字段作为识别</p></blockquote><h1 id="外键约束-foreign-key"><a href="#外键约束-foreign-key" class="headerlink" title="外键约束   foreign key"></a>外键约束   foreign key</h1><p>我们可能会疑惑什么是外键约束，我直接说一下，外键约束时<strong>联系多张表的约束</strong>，下面我用例子为大家说明一下</p><p>我们先创建两张表</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 班级表</span><span class="token keyword">create</span> <span class="token keyword">table</span> class<span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 学生表</span><span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>classId <span class="token keyword">int</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203112235117.png" alt="image-20220311223532002"></p><blockquote><p>每一个同学肯定是属于一个班级的，我们向往班级表中插入一些数据</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> class <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token boolean">null</span> <span class="token punctuation">,</span><span class="token string">'java1班'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token boolean">null</span> <span class="token punctuation">,</span><span class="token string">'java2班'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token boolean">null</span> <span class="token punctuation">,</span><span class="token string">'java3班'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token boolean">null</span> <span class="token punctuation">,</span><span class="token string">'java4班'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203112242258.png" alt="image-20220311224237207"></p><blockquote><p>下面我们可以假设这样一个场景，<strong>有一名同学叫做 李白，在  java1班学习</strong>，我们可以这么记录</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> student <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">'李白'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">--   java1班 的id  是1</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203112250025.png" alt="image-20220311225017985"></p><blockquote><p>上面的情况很正常，但要是我们下面这么插入数据啊。</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> student <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">'杜甫'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="C:/Users/DELL/AppData/Roaming/Typora/typora-user-images/image-20220311225213787.png" alt="image-20220311225213787"></p><p><strong>我们没有id 是100的班级，但是我们也成功插入了，这就和实际产生了差异，这就引出了外键约束</strong>。外键很简单，要是两张表有联系就可以使用外键约束</p><h2 id="正确使用外键"><a href="#正确使用外键" class="headerlink" title="正确使用外键"></a>正确使用外键</h2><p>我们向把班级表和学生表删除，重新创建、</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">drop</span> <span class="token keyword">tables</span> class<span class="token punctuation">,</span>student<span class="token punctuation">;</span></code></pre><h3 id="创捷班级表"><a href="#创捷班级表" class="headerlink" title="创捷班级表"></a>创捷班级表</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 创建班级表     不变</span><span class="token keyword">create</span> <span class="token keyword">table</span> class<span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 添加数据</span><span class="token keyword">insert</span> <span class="token keyword">into</span> class <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token boolean">null</span> <span class="token punctuation">,</span><span class="token string">'java1班'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token boolean">null</span> <span class="token punctuation">,</span><span class="token string">'java2班'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token boolean">null</span> <span class="token punctuation">,</span><span class="token string">'java3班'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token boolean">null</span> <span class="token punctuation">,</span><span class="token string">'java4班'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="创捷学生表"><a href="#创捷学生表" class="headerlink" title="创捷学生表"></a>创捷学生表</h3><p>外键的创建有些麻烦，我们先列出格式</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">foreign</span> <span class="token keyword">key</span><span class="token punctuation">(</span>本表的字段<span class="token punctuation">)</span> <span class="token keyword">references</span> 其他表的表名<span class="token punctuation">(</span>其他表的表名的字段<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">-- ()号是存在的</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>classId <span class="token keyword">int</span><span class="token punctuation">,</span><span class="token keyword">foreign</span> <span class="token keyword">key</span><span class="token punctuation">(</span>classId<span class="token punctuation">)</span> <span class="token keyword">references</span> class<span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">--   解释这句话   我们定义一个外键，是classId，链接 class表中的  id  字段</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203112304161.png" alt="image-20220311230413111"></p><p>当我们开始插入数据后，MySQL会自动帮助我们进行校验，我们来几次</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> student <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">'李白'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">'刘备'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">'曹操'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">'杜甫'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203112310379.png" alt="image-20220311231042335"></p><p>但我们插入class中不存在的id时，出现错误</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> student <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">'错误'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203112312579.png" alt="image-20220311231214545"></p><h3 id="外键约束的缺陷"><a href="#外键约束的缺陷" class="headerlink" title="外键约束的缺陷"></a>外键约束的缺陷</h3><p>我们使用外键会有一些小问题的。</p><ul><li>效率有些低，我们插入数据时要查询另一张表的数据</li><li>不太能被关联的表，下面我用代码表示一下</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">drop</span> <span class="token keyword">table</span> class<span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203112319534.png" alt="image-20220311231925496"></p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>详解MySQL中数据库之数据查找与修改</title>
      <link href="/2022/06/21/05%20%E8%AF%A6%E8%A7%A3MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E6%95%B0%E6%8D%AE%E6%9F%A5%E6%89%BE%E4%B8%8E%E4%BF%AE%E6%94%B9/"/>
      <url>/2022/06/21/05%20%E8%AF%A6%E8%A7%A3MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E6%95%B0%E6%8D%AE%E6%9F%A5%E6%89%BE%E4%B8%8E%E4%BF%AE%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>数据库的<strong>增删改查</strong>里查找数据是我们经常使用的操作，关于查找这里面有很多需要仔细研究的细节，今天我们先说一下简单的，后面复杂的查找方法我们用到的时候再说。由于修改数据的内容较少，我们一起说了吧。</p><p>我们先为今天的内容提供一个背景</p><p>创建一个表</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> exam_result <span class="token punctuation">(</span>id <span class="token keyword">INT</span><span class="token punctuation">,</span>name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>chinese <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>math <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>english <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>插入一部分数据</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> exam_result <span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span> chinese<span class="token punctuation">,</span> math<span class="token punctuation">,</span> english<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'唐三藏'</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'孙悟空'</span><span class="token punctuation">,</span> <span class="token number">87.5</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'猪悟能'</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">98.5</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'曹孟德'</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">,</span> <span class="token number">84</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">'刘玄德'</span><span class="token punctuation">,</span> <span class="token number">55.5</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">'孙权'</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">73</span><span class="token punctuation">,</span> <span class="token number">78.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">'宋公明'</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101333798.png" alt="image-20220310133351724"></p><h1 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h1><p>查询的操作有很多，我们先给他们分一下类</p><ul><li>全列查询</li><li>指定列查询</li><li>查询字段为表达式  </li><li>指定别名</li><li>去重查找</li><li>排序</li><li>条件查询</li><li>模糊匹配</li></ul><h2 id="全列查询"><a href="#全列查询" class="headerlink" title="全列查询"></a>全列查询</h2><p>说实话，全列查询我们最好不要做，对于我们个人来说，这种查询方式不会耗费多长时间，但是对于公司的数据而言，这中方式查询的列越多，意味着需要传输的数据量越大  ，而且可能会影响<strong>索引</strong>的使用。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token operator">&lt;</span>表名<span class="token operator">></span><span class="token punctuation">;</span>   </code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101344308.png" alt="image-20220310134417265"></p><h2 id="指定列查询"><a href="#指定列查询" class="headerlink" title="指定列查询"></a>指定列查询</h2><p>我们可以指定列查询，这种方式很不错</p><h3 id="指定一列"><a href="#指定一列" class="headerlink" title="指定一列"></a>指定一列</h3><p>我们可以指定一列来查询数据</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">&lt;</span>列名<span class="token operator">></span> <span class="token keyword">from</span> <span class="token operator">&lt;</span>表名<span class="token operator">></span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101349784.png" alt="image-20220310134915742"></p><h3 id="指定多列"><a href="#指定多列" class="headerlink" title="指定多列"></a>指定多列</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">&lt;</span>列名<span class="token number">1</span><span class="token operator">></span><span class="token punctuation">,</span><span class="token operator">&lt;</span>列名<span class="token number">2</span><span class="token operator">></span> <span class="token keyword">from</span> <span class="token operator">&lt;</span>表名<span class="token operator">></span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">-- 列名于列名之间要用 , 隔开</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101352075.png" alt="image-20220310135216035"></p><h2 id="查询字段为表达式"><a href="#查询字段为表达式" class="headerlink" title="查询字段为表达式"></a>查询字段为表达式</h2><p>我们可以对查询的字段进行算术运算，下面我以多列的形式来表现一下,我们先看看现象，后面在好好分析一下</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">&lt;</span>列名<span class="token number">1</span><span class="token operator">></span> <span class="token operator">+</span> <span class="token operator">&lt;</span>列名<span class="token number">1</span><span class="token operator">></span><span class="token punctuation">,</span><span class="token operator">&lt;</span>列名<span class="token number">2</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>列名<span class="token number">3</span><span class="token operator">></span> <span class="token operator">+</span> <span class="token number">10</span> <span class="token keyword">from</span> <span class="token operator">&lt;</span>表名<span class="token operator">></span><span class="token punctuation">;</span> </code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101358369.png" alt="image-20220310135811325"></p><blockquote><p>分析一下</p></blockquote><ul><li>我们看到表是一张<strong>临时表</strong>，<strong>原表的内容不会改变</strong></li><li>临时表的字段名和我们的表达式的形式一样</li><li>我们会看到，之前我们创建的表的math字段是这样，<strong>math DECIMAL(3,1),<strong>，我们都可以知道math的有效数据是三位，有一位是小数。但是我们 <strong>math+100</strong>,都超出了这个模式，实际上我们的临时表不遵循原表的限制，尽可能使得</strong>数据精确</strong>。</li></ul><h2 id="指定别名"><a href="#指定别名" class="headerlink" title="指定别名"></a>指定别名</h2><p>我们在看表达式查询的时候，出现了 <strong>id + id</strong>这样的字段名，看着很不舒服，我们想要对他指定别名</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">&lt;</span>列名<span class="token number">1</span><span class="token operator">></span> <span class="token operator">+</span> <span class="token number">10</span> <span class="token keyword">as</span> 别名<span class="token punctuation">,</span><span class="token operator">&lt;</span>列名<span class="token number">2</span><span class="token operator">></span> <span class="token operator">+</span> <span class="token operator">&lt;</span>列名<span class="token number">3</span><span class="token operator">></span> <span class="token keyword">from</span> <span class="token operator">&lt;</span>表名<span class="token operator">></span>  <span class="token comment" spellcheck="true">-- as 不写也可以</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101409252.png" alt="image-20220310140933212"></p><h2 id="去重查找"><a href="#去重查找" class="headerlink" title="去重查找"></a>去重查找</h2><p>我们再插入一个数据</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> exam_result <span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span> chinese<span class="token punctuation">,</span> math<span class="token punctuation">,</span> english<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">'宋公明'</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">'吴用'</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101414956.png" alt="image-20220310141452911"></p><h3 id="指定单列去重"><a href="#指定单列去重" class="headerlink" title="指定单列去重"></a>指定单列去重</h3><p>现在我们开始进行去重</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token keyword">distinct</span> <span class="token operator">&lt;</span>字段名<span class="token operator">></span> <span class="token keyword">from</span> <span class="token operator">&lt;</span>表名<span class="token operator">></span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">-- distinct 理解为关键字</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101417329.png" alt="image-20220310141713287"></p><blockquote><p>我们去重得到的表也是临时表</p></blockquote><h3 id="指定多列去重"><a href="#指定多列去重" class="headerlink" title="指定多列去重"></a>指定多列去重</h3><p>我们也可以多列去重，但是我们也要知道要求</p><ul><li>所有的 列名 在distinct后面</li><li>只有 当我们指定多列全部相同时，才会去重</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token keyword">distinct</span> <span class="token operator">&lt;</span>字段名<span class="token number">1</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>字段名<span class="token number">2</span><span class="token operator">></span> <span class="token keyword">from</span> <span class="token operator">&lt;</span>表名<span class="token operator">></span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101421381.png" alt="image-20220310142146335"></p><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><p>排序很简单，我们看几个例子就可以了</p><ul><li>NULL不是0，是最小的 NULL ，<strong>加上任何数都是 NULL</strong></li><li><strong>asc 是升序    desc 是 降序</strong>，默认是升序</li><li>排序支持指定别名</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> exam_result <span class="token keyword">order</span> <span class="token keyword">by</span> math <span class="token keyword">asc</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">--  按照 math 的大小进行 升序</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101447538.png" alt="image-20220310144716493"></p><blockquote><p>按照总成绩   支持别名</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>chinese <span class="token operator">+</span> math <span class="token operator">+</span> english total <span class="token keyword">from</span> exam_result <span class="token keyword">order</span> <span class="token keyword">by</span> total <span class="token keyword">asc</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101452156.png" alt="image-20220310145234104"></p><blockquote><p>支持 多列来排序 </p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> exam_result <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token operator">&lt;</span>字段<span class="token number">1</span><span class="token operator">></span><span class="token punctuation">,</span><span class="token operator">&lt;</span>字段<span class="token number">2</span><span class="token operator">></span> <span class="token keyword">asc</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">-- 字段1 的优先级高</span></code></pre><ul><li>只有 字段1 相同时，才会比较 字段 2</li></ul><blockquote><p>升序和降序可以混合使用，但是也有优先级的</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查询同学各门成绩，依次按 数学降序，英语升序，语文升序的方式显示</span><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> math<span class="token punctuation">,</span> english<span class="token punctuation">,</span> chinese <span class="token keyword">FROM</span> exam_result<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> math <span class="token keyword">DESC</span><span class="token punctuation">,</span> english<span class="token punctuation">,</span> chinese</code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101456678.png" alt="image-20220310145627630"></p><h2 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h2><p>条件查询才是今天的正菜，我们用的是<strong>where判断语句</strong>，里面有条件表达式，我们先看一下条件查询的语句格式</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">&lt;</span>字段名<span class="token number">1</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>字段名<span class="token number">2</span><span class="token operator">></span> <span class="token keyword">from</span> <span class="token operator">&lt;</span>表名<span class="token operator">></span> <span class="token keyword">where</span> <span class="token operator">&lt;</span>判断语句<span class="token operator">></span><span class="token punctuation">;</span></code></pre><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><table><thead><tr><th align="center">运算符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">&gt;, &gt;&#x3D;, &lt;, &lt;&#x3D;</td><td align="center">大于，大于等于，小于，小于等于</td></tr><tr><td align="center">&#x3D;</td><td align="center">等于，NULL 不安全，例如 NULL &#x3D; NULL 的结果是 NULL</td></tr><tr><td align="center">&lt;&#x3D;&gt;</td><td align="center">等于，NULL 安全，例如 NULL &lt;&#x3D;&gt; NULL 的结果是 TRUE(1)</td></tr><tr><td align="center">!&#x3D;, &lt;&gt;</td><td align="center">不等于</td></tr><tr><td align="center">between A and B</td><td align="center">[A,B]</td></tr><tr><td align="center">int(a,b,c)</td><td align="center">数据只要是a，b，c中的一个就是 true</td></tr><tr><td align="center">is not null</td><td align="center">不是NULL 是 true</td></tr><tr><td align="center">is null</td><td align="center">是NULL 为true</td></tr><tr><td align="center">like</td><td align="center">模糊匹配 （下面细说）</td></tr></tbody></table><h3 id="算数运算符之-比较相等-x3D-amp-lt-x3D-gt"><a href="#算数运算符之-比较相等-x3D-amp-lt-x3D-gt" class="headerlink" title="算数运算符之 比较相等 (  &#x3D; &amp; &lt;&#x3D;&gt;  )"></a>算数运算符之 比较相等 (  &#x3D; &amp; &lt;&#x3D;&gt;  )</h3><p>我们来稍微说一下这两个的区别，大家一看就i明白了</p><h4 id="NULL-安全-lt-x3D-gt"><a href="#NULL-安全-lt-x3D-gt" class="headerlink" title="NULL 安全    &lt;&#x3D;&gt;"></a>NULL 安全    &lt;&#x3D;&gt;</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> name <span class="token keyword">from</span> exam_result <span class="token keyword">where</span> chinese <span class="token operator">&lt;=></span> <span class="token boolean">null</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">-- null 是安全的</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101859420.png" alt="image-20220310185912325"></p><h4 id="NULL不安全-x3D"><a href="#NULL不安全-x3D" class="headerlink" title="NULL不安全  &#x3D;"></a>NULL不安全  &#x3D;</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> name <span class="token keyword">from</span> exam_result <span class="token keyword">where</span> chinese <span class="token operator">=</span> <span class="token boolean">null</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101901416.png" alt="image-20220310190121386"></p><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p>这里逻辑运算符和我们学的语言中的作用一样，我们一起来看看，</p><table><thead><tr><th align="center">运算符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">and</td><td align="center">逻辑与</td></tr><tr><td align="center">or</td><td align="center">逻辑或</td></tr><tr><td align="center">not</td><td align="center">逻辑非</td></tr></tbody></table><h3 id="条件语句的使用"><a href="#条件语句的使用" class="headerlink" title="条件语句的使用"></a>条件语句的使用</h3><blockquote><p>后面的运算符我一一使用一下，很简单，我们没有用全部，他们的原理都是一样的</p></blockquote><h4 id="gt"><a href="#gt" class="headerlink" title="&gt;"></a>&gt;</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> exam_result <span class="token keyword">where</span> chinese <span class="token operator">></span> math<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">-- 语文成绩 大于 数学成绩 </span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101903834.png" alt="image-20220310190356797"></p><h4 id="between-A-and-B"><a href="#between-A-and-B" class="headerlink" title="between A and B"></a>between A and B</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> exam_result <span class="token keyword">where</span> chinese <span class="token operator">between</span> <span class="token number">70</span> <span class="token operator">and</span> <span class="token number">100</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">-- 语文成绩 在 70到100之间的，包括 70和100</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101906018.png" alt="image-20220310190616980"></p><h4 id="in-a，b，c，d．．．"><a href="#in-a，b，c，d．．．" class="headerlink" title="in(ａ，ｂ，ｃ，ｄ．．．)"></a>in(ａ，ｂ，ｃ，ｄ．．．)</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> exam_result <span class="token keyword">where</span> chinese <span class="token operator">in</span><span class="token punctuation">(</span><span class="token number">67</span><span class="token punctuation">,</span><span class="token number">70.0</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">-- 语文成绩 在等于 67,70.0,88,100 几个中的一个</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101913539.png" alt="image-20220310191313497"></p><h4 id="is-null"><a href="#is-null" class="headerlink" title="is null"></a>is null</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> exam_result <span class="token keyword">where</span> chinese <span class="token operator">is</span> <span class="token boolean">null</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203102003609.png" alt="image-20220310200327568"></p><h4 id="and"><a href="#and" class="headerlink" title="and"></a>and</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> exam_result <span class="token keyword">where</span> chinese <span class="token operator">in</span><span class="token punctuation">(</span><span class="token number">67</span><span class="token punctuation">,</span><span class="token number">70.0</span><span class="token punctuation">,</span><span class="token number">88.0</span><span class="token punctuation">)</span> <span class="token operator">and</span> chinese <span class="token operator">></span> math<span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101917010.png" alt="image-20220310191742967"></p><h3 id="模糊匹配-like"><a href="#模糊匹配-like" class="headerlink" title="模糊匹配 like"></a>模糊匹配 like</h3><p>模糊匹配的意思是看字符串是不是<strong>相似</strong>，我们需要搭配下面的通配符</p><ul><li>%  看作任意个 字符</li><li>_   看作一个字符</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> exam_result <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">'宋%'</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">--  只要是 以 宋 开头的</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101926961.png" alt="image-20220310192654918"></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> exam_result <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">'宋_'</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">--  以 宋 头的 并且要有两个字符组成</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101928675.png" alt="image-20220310192811639"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>我们使用条件语句的时候，由于符号的<strong>优先级问题</strong>，最好加上括号，并且<strong>where语句后面不能使用别名</strong></p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>chinese <span class="token operator">+</span> math <span class="token operator">+</span> english total <span class="token keyword">from</span> exam_result <span class="token keyword">where</span> total <span class="token operator">></span> <span class="token number">100</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">--错误</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203102003077.png" alt="image-20220310200310042"></p><blockquote><p>我们查找的时候遵循 <strong>最左原则</strong>  也就是第一次除去数据最多的，后面的 依次减少，使得我们查找数据所用的时间最短</p></blockquote><h2 id="分页查找"><a href="#分页查找" class="headerlink" title="分页查找"></a>分页查找</h2><p>有时候我们就是只想要一个数据表一部分，比如要求要求考试的前三名，这就要使用 分页查找</p><p>分页的查找的关键字是 **limit **</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> name<span class="token punctuation">,</span>math<span class="token operator">+</span>chinese<span class="token operator">+</span>english <span class="token keyword">as</span> total <span class="token keyword">from</span> exam_result <span class="token keyword">order</span> <span class="token keyword">by</span> total <span class="token keyword">desc</span> <span class="token keyword">limit</span> <span class="token number">3</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101935156.png" alt="image-20220310193526114"></p><p>我们也可以查找 第 4，5，6名同学的总成绩</p><p>使用  offset N  从下标为N的位置开始查找   下标从  0 开始</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> name<span class="token punctuation">,</span>math<span class="token operator">+</span>chinese<span class="token operator">+</span>english <span class="token keyword">as</span> total <span class="token keyword">from</span> exam_result <span class="token keyword">order</span> <span class="token keyword">by</span> total <span class="token keyword">desc</span> <span class="token keyword">limit</span> <span class="token number">3</span> <span class="token keyword">offset</span> <span class="token number">3</span><span class="token punctuation">;</span></code></pre><p> <img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101938046.png" alt="image-20220310193826003"></p><blockquote><p>这里有些注意的地方</p></blockquote><ul><li>limit A offset B ;  A 过大超出数据的数量  相当于 全部查找</li><li>limit A offset B ;  B过大 查找的数据为空</li></ul><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101941706.png" alt="image-20220310194133654"></p><h1 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h1><p>修改表中的数据我们也是比较常用的，这是真正修改原始表中数据的方法，这部分知识点较少</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">update</span> <span class="token operator">&lt;</span>表名<span class="token operator">></span> <span class="token keyword">set</span> <span class="token operator">&lt;</span>字段名<span class="token number">1</span><span class="token operator">></span> <span class="token operator">=</span> 新数据 <span class="token punctuation">,</span> <span class="token operator">&lt;</span>字段名<span class="token number">2</span><span class="token operator">></span> <span class="token operator">=</span> 新数据 <span class="token keyword">where</span> 语句<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">-- where 语句 省略修改的是整张表</span></code></pre><p>我们使用一下</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">update</span> exam_result <span class="token keyword">set</span> id <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">,</span> chinese <span class="token operator">=</span> <span class="token number">90</span> <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">'吴_'</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101956089.png" alt="image-20220310195617013"></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 将总成绩倒数前三的 3 位同学的数学成绩加上 30 分</span><span class="token keyword">update</span> exam_result <span class="token keyword">set</span> math <span class="token operator">=</span> math <span class="token operator">+</span> <span class="token number">30</span> <span class="token keyword">order</span> <span class="token keyword">by</span> chinese <span class="token operator">+</span> math <span class="token operator">+</span> english <span class="token keyword">LIMIT</span> <span class="token number">3</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203101958157.png" alt="image-20220310195844098"></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">update</span> exam_result <span class="token keyword">set</span> id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">--  把所有的 id 置为 0 </span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203102002095.png" alt="image-20220310200229044"></p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>window环境下MySQL的安装与配置</title>
      <link href="/2022/06/21/01%20window%E7%8E%AF%E5%A2%83%E4%B8%8BMySQL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/06/21/01%20window%E7%8E%AF%E5%A2%83%E4%B8%8BMySQL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><blockquote><p>现在的我们日常使用的最多的数据库MySQL，今天说一下MySQL的安装步骤，很简单，一路next就行，我建议大家安装在C盘，这样后面我们出错的可能性低</p></blockquote><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://dev.mysql.com/downloads/installer/">MySQL Installer</a></p><p><img src="https://img-blog.csdnimg.cn/a3548520b54640abb3d4b2c3415ee64b.png" alt="在这里插入图片描述"></p><blockquote><p>这里我是通过离线安装的方式，官网下载速度有些慢，这里提供一个链接，可以减少点时间<br><a href="https://pan.baidu.com/s/1_-SOF0BvtPGHgRqHNYQE5A">提取码：qtm5</a></p></blockquote><blockquote><p>下载成功后就是这样，双击进入下载</p></blockquote><p><img src="https://img-blog.csdnimg.cn/9351b2fd5a354320b22a5e49a7a9ca30.png" alt="在这里插入图片描述"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><p>一路next就行，不用管太多</p></blockquote><p><img src="https://img-blog.csdnimg.cn/e4f86f99d83e4a4eb6f83933e080327b.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/d6e848fa39954cb8aaf1ff88a8ded662.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2b246cf2ca30488396b3c6667618d950.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/d88394130f054cfa88c65f0fd141f2b7.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/40a66123ee1843ec8bb5ff38d6427ada.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/76b863826839463a824c61f7f2a09b48.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/4141250dcbc6426286567a1840f38242.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/935196c01cd646569b87398685b02431.png" alt="在这里插入图片描述"></p><h3 id="设置密码-不用太复杂"><a href="#设置密码-不用太复杂" class="headerlink" title="设置密码 不用太复杂"></a>设置密码 不用太复杂</h3><p><img src="https://img-blog.csdnimg.cn/54549c21ce9a414b888d097c8a90cc3e.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/db19535b2a0a441580a0efc8246813f4.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/6eafa66138b5476280fb315bc8eb7907.png" alt="在这里插入图片描述"></p><h3 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成"></a>安装完成</h3><p><img src="https://img-blog.csdnimg.cn/236d55ef227946cfadea8e556037a924.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/ade0acef52ba4dd39d816c2bf78ba8db.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/ad171dcbcf8d4f97b5be8a5eeefcf442.png" alt="在这里插入图片描述"></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><blockquote><p>假设你要在cmd窗口使用MySQL，我们就需要一点配置了，只需添加一个PATH就行</p></blockquote><h3 id="寻找安装路径"><a href="#寻找安装路径" class="headerlink" title="寻找安装路径"></a>寻找安装路径</h3><blockquote><p>我们一直使用的是next，可以很轻易的得到路经位置</p></blockquote><p><img src="https://img-blog.csdnimg.cn/d8d2edc5e51a4081bf8e09c0544a02bd.png" alt="在这里插入图片描述"></p><h3 id="配置Path"><a href="#配置Path" class="headerlink" title="配置Path"></a>配置Path</h3><p><img src="https://img-blog.csdnimg.cn/413f38f7beff436982c9ae4c7c982914.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/a9ee6bdf16e1412bba5caa4c7b90dfd5.png" alt="在这里插入图片描述"></p><h3 id="配置成功"><a href="#配置成功" class="headerlink" title="配置成功"></a>配置成功</h3><p><img src="https://img-blog.csdnimg.cn/e7cce867222a4e6582ced7ba8ccd23d0.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>详解MySQL数据库之索引</title>
      <link href="/2022/06/21/07%20%E8%AF%A6%E8%A7%A3MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E7%B4%A2%E5%BC%95/"/>
      <url>/2022/06/21/07%20%E8%AF%A6%E8%A7%A3MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E7%B4%A2%E5%BC%95/</url>
      
        <content type="html"><![CDATA[<p>一对一   身份证号</p><p>一对多  班级 中N个学生</p><p>多对多 </p><p>书的目录 英文 一样</p><p>加快查找的效率</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>详解MySQL中数据库的的增删改查 进阶</title>
      <link href="/2022/06/21/08%20%E8%AF%A6%E8%A7%A3MySQL%E6%95%B0%E6%8D%AE%E7%9A%84%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%20%E8%BF%9B%E9%98%B6/"/>
      <url>/2022/06/21/08%20%E8%AF%A6%E8%A7%A3MySQL%E6%95%B0%E6%8D%AE%E7%9A%84%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%20%E8%BF%9B%E9%98%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>这篇博客主要是数据库增删查改的的进阶，我们在这里要学习聚合查询和联合查询，其中联合查询是我们经常使用的，并且有一定的难度，我们需要经常练习。</p><h1 id="查找到的数据插入到另一张表中"><a href="#查找到的数据插入到另一张表中" class="headerlink" title="查找到的数据插入到另一张表中"></a>查找到的数据插入到另一张表中</h1><p>我们以前使用过select查询一张表中的数据，那么我们是否可以把查到的数据保存到另一张表里面呢，事实上，我们可以做到</p><h2 id="创建一张-原始表"><a href="#创建一张-原始表" class="headerlink" title="创建一张 原始表"></a>创建一张 原始表</h2><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 创建一张 原始表</span><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">user</span><span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>decription <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 插入一些数据</span><span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token keyword">user</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">'曹操'</span><span class="token punctuation">,</span><span class="token string">'乱世枭雄'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">'刘备'</span><span class="token punctuation">,</span><span class="token string">'仁德之主'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">'孙权'</span><span class="token punctuation">,</span><span class="token string">'年轻有为'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203121837217.png" alt="image-20220312183736081"></p><h2 id="创建保存表"><a href="#创建保存表" class="headerlink" title="创建保存表"></a>创建保存表</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> user2<span class="token punctuation">(</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>decription <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="开始查找并保存"><a href="#开始查找并保存" class="headerlink" title="开始查找并保存"></a>开始查找并保存</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> user2 <span class="token keyword">select</span> name<span class="token punctuation">,</span>decription <span class="token keyword">from</span> <span class="token keyword">user</span><span class="token punctuation">;</span> </code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203121840361.png" alt="image-20220312184058293"></p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li><p>子查询得到的 <strong>列顺序</strong> 和 **类型 **要相同</p></li><li><p>列名一不一样没有挂巴西</p></li><li><p>我们查询得到的数据保存时一定要相匹配</p></li></ul><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203121843168.png" alt="image-20220312184347126"></p><hr><h1 id="聚合查询"><a href="#聚合查询" class="headerlink" title="聚合查询"></a>聚合查询</h1><p>聚合查询很简单，就是借助我们SQL的内置的函数就可以了，我们不关心他们是如何实现的，熟练掌握就可以了。下面我们来看看都有哪些函数。我们就一些例子来说，由于他们使用的方法都是一样的，我们就说一部分就可以了</p><h2 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h2><p>下面是内置函数的分类和说明，我们看一看看就可以了，用着用着就会了。这些内置函数的得到的都是一张<strong>临时表</strong></p><table><thead><tr><th align="center">函数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">count()</td><td align="center">返回查询到的数据的 数量</td></tr><tr><td align="center">max()</td><td align="center">返回查询到的数据的 最大值，不是数字没有意义</td></tr><tr><td align="center">min()</td><td align="center">返回查询到的数据的 最小值，不是数字没有意义</td></tr><tr><td align="center">avg()</td><td align="center">返回查询到的数据的 平均值，不是数字没有意义</td></tr><tr><td align="center">sum()</td><td align="center">返回查询到的数据的 总和，不是数字没有意义</td></tr></tbody></table><h3 id="count"><a href="#count" class="headerlink" title="count"></a>count</h3><p>count 这个函数很奇怪，我们在使用的的时候一定要小心，下面让我们来看看它的用法</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">from</span> <span class="token keyword">user</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">-- 计算 id  的行数</span></code></pre><blockquote><p>这个是是计算 字段 <strong>id</strong> 所占据的函数，<strong>但是要是 id 的值位 NULL ，这一行就不计算</strong></p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> <span class="token keyword">user</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">-- 计算 所有列  的行数 去最大值</span></code></pre><blockquote><p>一般情况下，得到的值和任意列的行数相同，但是有 NULL 的话就不一定了</p></blockquote><blockquote><p>只要默认值不是NULL 都计算</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">types</span><span class="token punctuation">(</span>type_id <span class="token keyword">int</span><span class="token punctuation">,</span>type_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">'unknow'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token keyword">types</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token keyword">types</span> <span class="token punctuation">(</span>type_id<span class="token punctuation">)</span><span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203121919193.png" alt="image-20220312191905128"></p><h4 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>count  不计算NULL的值   可以计算其他默认值</li><li>count后不能有空格</li></ul><h3 id="sum"><a href="#sum" class="headerlink" title="sum"></a>sum</h3><p>sum 是计算指定列的和，我们也可以使用where语句进行一部分的求和</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>score <span class="token keyword">decimal</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> student <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">'刘备'</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">'曹操'</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">'孙权'</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">'张飞'</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203121932941.png" alt="image-20220312193235821"></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">sum</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span> <span class="token keyword">from</span> student<span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">--  允许指定别名  </span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203121934154.png" alt="image-20220312193418066"></p><h3 id="avg"><a href="#avg" class="headerlink" title="avg"></a>avg</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">avg</span> <span class="token punctuation">(</span>score<span class="token punctuation">)</span> <span class="token keyword">from</span> student<span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203121935037.png" alt="image-20220312193554005"></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">avg</span> <span class="token punctuation">(</span>score<span class="token punctuation">)</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> score <span class="token operator">&lt;</span> <span class="token number">85</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">-- 计算 分数 小于85 的同学的平均数</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203121938501.png" alt="image-20220312193802467"></p><h2 id="group-by-子句"><a href="#group-by-子句" class="headerlink" title="group by 子句"></a>group by 子句</h2><p>group by 子句主要是为了分组,我们指定字段,将字段内容相同的分为一组,这和去重不一样,后面用到是的时候你就会发现</p><blockquote><p>使用 group by 进行分组查询时，select 指定的字段必须是“分组依据字段”，其他字段若想出现在select  中则必须包含在聚合函数中  </p></blockquote><p>我先创建一个环境</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> emp<span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>role <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>salary <span class="token keyword">numeric</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> emp<span class="token punctuation">(</span>name<span class="token punctuation">,</span> role<span class="token punctuation">,</span> salary<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'马云'</span><span class="token punctuation">,</span><span class="token string">'服务员'</span><span class="token punctuation">,</span> <span class="token number">1000.20</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'马化腾'</span><span class="token punctuation">,</span><span class="token string">'游戏陪玩'</span><span class="token punctuation">,</span> <span class="token number">2000.99</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'孙悟空'</span><span class="token punctuation">,</span><span class="token string">'游戏角色'</span><span class="token punctuation">,</span> <span class="token number">999.11</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'猪无能'</span><span class="token punctuation">,</span><span class="token string">'游戏角色'</span><span class="token punctuation">,</span> <span class="token number">333.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'沙和尚'</span><span class="token punctuation">,</span><span class="token string">'游戏角色'</span><span class="token punctuation">,</span> <span class="token number">700.33</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'隔壁老王'</span><span class="token punctuation">,</span><span class="token string">'董事长'</span><span class="token punctuation">,</span> <span class="token number">12000.66</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="查询每个角色的最高-最低-平局工资"><a href="#查询每个角色的最高-最低-平局工资" class="headerlink" title="查询每个角色的最高 最低 平局工资"></a>查询每个角色的最高 最低 平局工资</h3><p>这就要使用分组,分组后还可以使用内置函数</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> role <span class="token punctuation">,</span><span class="token function">max</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">from</span> emp <span class="token keyword">group</span> <span class="token keyword">by</span> role<span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203161256390.png" alt="image-20220316125638348"></p><h2 id="having"><a href="#having" class="headerlink" title="having"></a>having</h2><p>having 和 where语句作用是一样的,只不过它使用与group by 语句中</p><h3 id="查询平均工资大于1000的角色"><a href="#查询平均工资大于1000的角色" class="headerlink" title="查询平均工资大于1000的角色"></a>查询平均工资大于1000的角色</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> role<span class="token punctuation">,</span><span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">from</span> emp <span class="token keyword">group</span> <span class="token keyword">by</span> role <span class="token keyword">having</span> <span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1000</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203161300350.png" alt="image-20220316130025311"></p><hr><h1 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h1><blockquote><p>联合查询才是我们今天的正菜，这就要求高了，联合查询是<strong>多张表</strong>之间的查询，我们会经常使用</p></blockquote><h2 id="笛卡尔积"><a href="#笛卡尔积" class="headerlink" title="笛卡尔积"></a>笛卡尔积</h2><p>很抱歉，即使在计算机学习中我们也要听到这个“恶魔”的名字，不错他就是那个笛卡尔坐标系的笛卡尔，很庆幸我们不会学那么难的，就一个很简单的知识点，下面我画图表示</p><p>笛卡尔积的计算很简单，只需要表的函数相乘就可以了，不过这是我们学习联合查询的基础</p><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203161214557.png" alt="image-20220316121442492"></p><h3 id="环境创建"><a href="#环境创建" class="headerlink" title="环境创建"></a>环境创建</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 创建班级表</span><span class="token keyword">create</span> <span class="token keyword">table</span> classes<span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">`</span><span class="token keyword">desc</span><span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 创建课程表</span><span class="token keyword">create</span> <span class="token keyword">table</span> course <span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 创建分数表</span><span class="token keyword">create</span> <span class="token keyword">table</span> score<span class="token punctuation">(</span>score <span class="token keyword">decimal</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>student_id <span class="token keyword">int</span><span class="token punctuation">,</span>course_id <span class="token keyword">int</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 创建学生表</span><span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>sn <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>qq_mail <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>classes_id <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203161104848.png" alt="image-20220316110427684"></p><p>插入一些数据  班级</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> classes<span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token punctuation">`</span><span class="token keyword">desc</span><span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'计算机系2019级1班'</span><span class="token punctuation">,</span> <span class="token string">'学习了计算机原理、C和Java语言、数据结构和算法'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'中文系2019级3班'</span><span class="token punctuation">,</span><span class="token string">'学习了中国传统文学'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'自动化2019级5班'</span><span class="token punctuation">,</span><span class="token string">'学习了机械自动化'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> course<span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'Java'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'中国传统文化'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'计算机原理'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'语文'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'高阶数学'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'英文'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> student<span class="token punctuation">(</span>sn<span class="token punctuation">,</span> name<span class="token punctuation">,</span> qq_mail<span class="token punctuation">,</span> classes_id<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'09982'</span><span class="token punctuation">,</span><span class="token string">'黑旋风李逵'</span><span class="token punctuation">,</span><span class="token string">'xuanfeng@qq.com'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'00835'</span><span class="token punctuation">,</span><span class="token string">'菩提老祖'</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'00391'</span><span class="token punctuation">,</span><span class="token string">'白素贞'</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'00031'</span><span class="token punctuation">,</span><span class="token string">'许仙'</span><span class="token punctuation">,</span><span class="token string">'xuxian@qq.com'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'00054'</span><span class="token punctuation">,</span><span class="token string">'不想毕业'</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'51234'</span><span class="token punctuation">,</span><span class="token string">'好好说话'</span><span class="token punctuation">,</span><span class="token string">'say@qq.com'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'83223'</span><span class="token punctuation">,</span><span class="token string">'tellme'</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'09527'</span><span class="token punctuation">,</span><span class="token string">'老外学中文'</span><span class="token punctuation">,</span><span class="token string">'foreigner@qq.com'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> score<span class="token punctuation">(</span>score<span class="token punctuation">,</span> student_id<span class="token punctuation">,</span> course_id<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token comment" spellcheck="true">-- 黑旋风李逵</span><span class="token punctuation">(</span><span class="token number">70.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">98.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">-- 菩提老祖</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">59.5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">-- 白素贞</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">68</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">-- 许仙</span><span class="token punctuation">(</span><span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">72</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">-- 不想毕业</span><span class="token punctuation">(</span><span class="token number">81</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">-- 好好说话</span><span class="token punctuation">(</span><span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">79</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">-- tellme</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203161106449.png" alt="image-20220316110615316"></p><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203161109768.png" alt="image-20220316110905700"></p><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203161111150.png" alt="image-20220316111138020"></p><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203161112011.png" alt="image-20220316111217877"></p><h2 id="查询每一个学生的每一门成绩"><a href="#查询每一个学生的每一门成绩" class="headerlink" title="查询每一个学生的每一门成绩"></a>查询每一个学生的每一门成绩</h2><p>分析我们这个要求</p><ol><li>学生在 student表中  </li><li>课程在 course表中</li><li>成绩在score表中</li></ol><p>下面我们就可以写出下面代码,</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> student<span class="token punctuation">.</span>id<span class="token punctuation">,</span>student<span class="token punctuation">.</span>name <span class="token punctuation">,</span>course<span class="token punctuation">.</span>id<span class="token punctuation">,</span>course<span class="token punctuation">.</span>name <span class="token punctuation">,</span>score<span class="token punctuation">.</span>score <span class="token keyword">from</span> student<span class="token punctuation">,</span>course<span class="token punctuation">,</span>score<span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203161230465.png" alt="image-20220316123017422"></p><p>我们发现结果有 960行,这肯定是不对的,我们得到了一些无效的数据.后面要加判断语句</p><blockquote><p>我们发现要取的有效数据,学生的id一定要和成绩表的学生的id一定要相等</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> student<span class="token punctuation">.</span>id<span class="token punctuation">,</span>student<span class="token punctuation">.</span>name <span class="token punctuation">,</span>course<span class="token punctuation">.</span>id<span class="token punctuation">,</span>course<span class="token punctuation">.</span>name <span class="token punctuation">,</span>score<span class="token punctuation">.</span>score <span class="token keyword">from</span> student<span class="token punctuation">,</span>course<span class="token punctuation">,</span>score<span class="token keyword">where</span> student<span class="token punctuation">.</span>id <span class="token operator">=</span> score<span class="token punctuation">.</span>student_id<span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203161237121.png" alt="image-20220316123723086"></p><p>只有120行了,还要加判断条件,课程id和成绩表的课程id也要相等</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> student<span class="token punctuation">.</span>id<span class="token punctuation">,</span>student<span class="token punctuation">.</span>name <span class="token punctuation">,</span>course<span class="token punctuation">.</span>id<span class="token punctuation">,</span>course<span class="token punctuation">.</span>name <span class="token punctuation">,</span>score<span class="token punctuation">.</span>score <span class="token keyword">from</span> student<span class="token punctuation">,</span>course<span class="token punctuation">,</span>score<span class="token keyword">where</span> student<span class="token punctuation">.</span>id <span class="token operator">=</span> score<span class="token punctuation">.</span>student_id <span class="token operator">and</span> score<span class="token punctuation">.</span>course_id <span class="token operator">=</span> course<span class="token punctuation">.</span>id<span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203161240000.png" alt="image-20220316123959946"></p><p>这样就完成了,我们呢也可以简单一下表</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> student<span class="token punctuation">.</span>id<span class="token punctuation">,</span>student<span class="token punctuation">.</span>name <span class="token punctuation">,</span>course<span class="token punctuation">.</span>name <span class="token keyword">as</span> course_name<span class="token punctuation">,</span>score<span class="token punctuation">.</span>score <span class="token keyword">from</span> student<span class="token punctuation">,</span>course<span class="token punctuation">,</span>score<span class="token keyword">where</span> student<span class="token punctuation">.</span>id <span class="token operator">=</span> score<span class="token punctuation">.</span>student_id <span class="token operator">and</span> score<span class="token punctuation">.</span>course_id <span class="token operator">=</span> course<span class="token punctuation">.</span>id<span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203161241162.png" alt="image-20220316124139107"></p><h2 id="计算每一名同学的总成绩"><a href="#计算每一名同学的总成绩" class="headerlink" title="计算每一名同学的总成绩"></a>计算每一名同学的总成绩</h2><p>配合使用聚合函数</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> student<span class="token punctuation">.</span>id<span class="token punctuation">,</span>student<span class="token punctuation">.</span>name <span class="token punctuation">,</span>course<span class="token punctuation">.</span>name <span class="token keyword">as</span> course_name<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>score<span class="token punctuation">.</span>score<span class="token punctuation">)</span> <span class="token keyword">from</span> student<span class="token punctuation">,</span>course<span class="token punctuation">,</span>score <span class="token keyword">where</span> student<span class="token punctuation">.</span>id <span class="token operator">=</span> score<span class="token punctuation">.</span>student_id <span class="token operator">and</span> score<span class="token punctuation">.</span>course_id <span class="token operator">=</span> course<span class="token punctuation">.</span>id <span class="token keyword">group</span> <span class="token keyword">by</span> student<span class="token punctuation">.</span>name<span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203161246309.png" alt="image-20220316124623265"></p><p>我们会了基本的联合查询后,就要开始下面几个比较难的的知识点了</p><h2 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h2><p>这个知识点我们了解就可以了,不过要记住 join on 的查询方法</p><p>我们看一下语法,只需要看看就可以,重点结合例子</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> 字段 <span class="token keyword">from</span> 表<span class="token number">1</span> 别名<span class="token number">1</span> <span class="token keyword">inner</span> <span class="token keyword">join</span> 表<span class="token number">2</span> 别名<span class="token number">2</span> <span class="token keyword">on</span> 连接条件 <span class="token operator">and</span> 其他条件<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">-- inner 可以省略</span><span class="token keyword">select</span> 字段 <span class="token keyword">from</span> 表<span class="token number">1</span> 别名<span class="token number">1</span><span class="token punctuation">,</span>表<span class="token number">2</span> 别名<span class="token number">2</span> <span class="token keyword">where</span> 连接条件 <span class="token operator">and</span> 其他条件<span class="token punctuation">;</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> sco<span class="token punctuation">.</span>score <span class="token keyword">from</span> student stu <span class="token keyword">inner</span> <span class="token keyword">join</span> score sco <span class="token keyword">on</span> stu<span class="token punctuation">.</span>id <span class="token operator">=</span> sco<span class="token punctuation">.</span>student_id<span class="token operator">and</span> stu<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'许仙'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 或者</span><span class="token keyword">select</span> sco<span class="token punctuation">.</span>score <span class="token keyword">from</span> student stu<span class="token punctuation">,</span> score sco <span class="token keyword">where</span> stu<span class="token punctuation">.</span>id <span class="token operator">=</span> sco<span class="token punctuation">.</span>student_id <span class="token operator">and</span>stu<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'许仙'</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203161306699.png" alt="image-20220316130630653"></p><p>观察下面的结果,我们有8个学生,但是结果只有7个,原因就是 score 中没有<strong>老外学中文的id</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student stu <span class="token keyword">join</span> score sco <span class="token keyword">on</span> stu<span class="token punctuation">.</span>id <span class="token operator">=</span> sco<span class="token punctuation">.</span>student_id<span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203161318648.png" alt="image-20220316131823578"></p><blockquote><p>我们可以这样理解,当我们对笛卡尔积的结果进行筛选,筛选的结果一定在两张表中都存咋,这就是内链接,可以立即为交集</p></blockquote><h2 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h2><p>谈完内连接,一定会有外连接,实际工作中,主要以内连接为主,不过我们也要了解我找了一篇文章,很不错,大家可以看看<a href="https://mp.weixin.qq.com/s?src=11&timestamp=1647408609&ver=3679&signature=zQpoxVv5U1fYDFX2wzgMBLlbb2OpRj7YdeoHyvQk1WPzhxF2I3S9MoIb5AEl4BsvbmSNoa1ZtG2y8VmOMhdWd55wx0TH9ri6mu7t*3yq1xZ8cZD27SwFkj7yNLaOCtXU&new=1">理解内连接外连接</a></p><h2 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h2><p>我们不谈外连接，这里就要说说什么是自连接。<strong>自连接是指在同一张表连接自身进行查询</strong>。我们可以把一张表看作是两张一摸一样的表来进行多表查询，这里我们仍然通过例子来演示.</p><p>&#x3D;&#x3D;问题 : 显示所有“计算机原理”成绩比“Java”成绩差的成绩信息&#x3D;&#x3D;</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 先查询“计算机原理”和“Java”课程的id</span><span class="token keyword">select</span> id<span class="token punctuation">,</span>name <span class="token keyword">from</span> course <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'Java'</span> <span class="token operator">or</span> name<span class="token operator">=</span><span class="token string">'计算机原理'</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203171503032.png" alt="image-20220317150301990"></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 再查询成绩表中，“计算机原理”成绩比“Java”成绩 差的信息</span><span class="token keyword">select</span> s1<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span>s2<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">from</span> score s1 <span class="token punctuation">,</span>score s2 <span class="token keyword">where</span> s1<span class="token punctuation">.</span>student_id <span class="token operator">=</span> s2<span class="token punctuation">.</span>student_id <span class="token operator">and</span> <span class="token punctuation">(</span>s1<span class="token punctuation">.</span>course_id <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">and</span> s2<span class="token punctuation">.</span>course_id <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">and</span> s1<span class="token punctuation">.</span>score <span class="token operator">></span> s2<span class="token punctuation">.</span>score<span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203171506016.png" alt="image-20220317150614972"></p><p>当然我们也可以使用 join on 语句</p><h1 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h1><p>子查询倒是很简单，我们可以把几个select在同一条语句中使用，下面是定义</p><blockquote><p>子查询是指嵌入在其他sql语句中的select语句，也叫嵌套查询  </p></blockquote><h2 id="单行子查询"><a href="#单行子查询" class="headerlink" title="单行子查询"></a>单行子查询</h2><p>我们用例子来演示</p><p>&#x3D;&#x3D;问题 : 查询与“不想毕业” 同学的同班同学&#x3D;&#x3D;</p><h3 id="我们可以先使用普通的查询方法"><a href="#我们可以先使用普通的查询方法" class="headerlink" title="我们可以先使用普通的查询方法"></a>我们可以先使用普通的查询方法</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查找 “不想毕业” 同学的 班级id</span><span class="token keyword">select</span> classes_id <span class="token keyword">from</span> student <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">'不想毕业'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查找所有学生班级id 与 “不想毕业” 同学 班级id 相同的学生</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> classes_id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203171438600.png" alt="image-20220317143800489"></p><h3 id="使用子查询"><a href="#使用子查询" class="headerlink" title="使用子查询"></a>使用子查询</h3><p>我们只需要一步就可以了</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> classes_id <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> classes_id <span class="token keyword">from</span> student <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">'不想毕业'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203171440700.png" alt="image-20220317144002644"></p><h2 id="多行查询"><a href="#多行查询" class="headerlink" title="多行查询"></a>多行查询</h2><p>有时侯，单行查询的结果是远远不够的，你看看下面的问题</p><p>&#x3D;&#x3D;问题：查询“语文”或“英文”课程的成绩信息&#x3D;&#x3D;</p><p>我们无法使用上面的的语句，这就需要多行行查询的结果，下面有两种方式可以解决</p><h3 id="使用-in"><a href="#使用-in" class="headerlink" title="使用 in"></a>使用 in</h3><p>我们直接使用，解释在下面</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> score <span class="token keyword">where</span> course_id <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> id <span class="token keyword">from</span> course <span class="token keyword">where</span> <span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">'语文'</span> <span class="token operator">or</span> name <span class="token operator">=</span> <span class="token string">'英文'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203171448005.png" alt="image-20220317144805958"></p><h3 id="使用-exists"><a href="#使用-exists" class="headerlink" title="使用 exists"></a>使用 exists</h3><p>这个方法我们有点难理解，记住就。一般情况下我们都是使用第一种方法</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> score sco <span class="token keyword">where</span> <span class="token keyword">exists</span> <span class="token punctuation">(</span><span class="token keyword">select</span> sco<span class="token punctuation">.</span>course_id <span class="token keyword">from</span> course cou<span class="token keyword">where</span> <span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'语文'</span> <span class="token operator">or</span> name<span class="token operator">=</span><span class="token string">'英文'</span><span class="token punctuation">)</span> <span class="token operator">and</span> cou<span class="token punctuation">.</span>id <span class="token operator">=</span> sco<span class="token punctuation">.</span>course_id<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203171449309.png" alt="image-20220317144946262"></p><blockquote><p>现在让我们来解释一下这些原理</p></blockquote><ul><li>对于 <strong>in</strong> ： SQL是先执行where语句后面的得到语文和英文课程的id 然后就是我们可以理解的查询语句了</li><li>对于 <strong>exists</strong> ： SQL先执行where前面的，得到的每一条数据看看是否符合后面的判断语句。</li></ul><h1 id="合并查询"><a href="#合并查询" class="headerlink" title="合并查询"></a>合并查询</h1><p>这是最后一个查询。很简单的</p><blockquote><p>在实际应用中，为了合并多个select的执行结果，可以使用集合操作符 union，union all。使用union<br>和union all时，前后查询的结果集中，字段需要一致  </p></blockquote><p>&#x3D;&#x3D;问题:查询id小于3，或者名字为“英文”的课程&#x3D;&#x3D;</p><p>我们使用平常的方法</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> course <span class="token keyword">where</span> id <span class="token operator">&lt;</span> <span class="token number">3</span> <span class="token operator">or</span> name <span class="token operator">=</span> <span class="token string">'英文'</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203171512838.png" alt="image-20220317151242792"></p><h3 id="union"><a href="#union" class="headerlink" title="union"></a>union</h3><p>我们也可以通过使用union来解决</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> course <span class="token keyword">where</span> id <span class="token operator">&lt;</span> <span class="token number">3</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> course <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">'英文'</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203171514094.png" alt="image-20220317151446048"></p><h3 id="union-all"><a href="#union-all" class="headerlink" title="union all"></a>union all</h3><p>我们可能会疑惑union all这个是什么玩意，看看下面的现象你就会明白了</p><p>&#x3D;&#x3D;问题: 查询id小于3，或者名字为“Java”的课程&#x3D;&#x3D;</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 使用 union</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> course <span class="token keyword">where</span> id <span class="token operator">&lt;</span> <span class="token number">3</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> course <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">'java'</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203171518732.png" alt="image-20220317151834686"></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 使用 union all</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> course <span class="token keyword">where</span> id <span class="token operator">&lt;</span> <span class="token number">3</span> <span class="token keyword">union</span> <span class="token keyword">all</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> course <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">'java'</span><span class="token punctuation">;</span></code></pre><p><img src="https://qkj0302.oss-cn-beijing.aliyuncs.com/img2/screenshot202203171519319.png" alt="image-20220317151957271"></p><p>这里你就会发现，当我们使用union all的时候，即使得到重复的数据也不会省略</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
